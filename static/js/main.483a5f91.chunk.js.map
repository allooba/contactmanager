{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","window","confirm","delete","t0","_this2","_this$props$contact","name","username","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","console","log","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","result","match","params","put","NotFound","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.483a5f91.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n  // async version\n  async componentDidMount() {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n\n    this.setState({ contacts: response.data });\n  }\n\n  // componentDidMount() {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(response => this.setState({ contacts: response.data }));\n  // }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nimport { Consumer } from \"../../context\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  //async function\n  onDeleteClick = async (id, dispatch) => {\n    if (window.confirm(\"Are you sure you want to delete this item?\")) {\n      try {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        // do the dispatch after API reponse\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\n      } catch {\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\n      }\n    }\n  };\n\n  // onDeleteClick = (id, dispatch) => {\n  //   if (window.confirm(\"Are you sure you want to delete this item?\")) {\n  //     axios\n  //       .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n  //       .then(response => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n  //   }\n  // };\n\n  render() {\n    const { id, name, username, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fa fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Username: {username}</li>\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone Number: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\n\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/contactmanager/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\">Home</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\">Add</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\">About</i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contacts Manager</h1>\n      <p className=\"lead\">Simple App to manage contacts</p>\n      <p className=\"text-secondary\">version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      <div className=\"invalid-feedback\">{error}</div>\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, username, email, phone } = this.state;\n\n    //check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required\" } });\n      return;\n    }\n    if (username === \"\") {\n      this.setState({ errors: { username: \"Usernmae is Required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required\" } });\n      return;\n    }\n    const newContact = {\n      name: name,\n      username: username,\n      email: email,\n      phone: phone\n    };\n\n    //add the record to the API using async function\n    try {\n      const response = await axios.post(\n        \"https://jsonplaceholder.typicode.com/users\",\n        newContact\n      );\n      dispatch({ type: \"ADD_CONTACT\", payload: response.data });\n    } catch (e) {\n      console.log(e.error);\n    }\n\n    //add the record to the API\n    // axios\n    //   .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\n    //   .then(response =>\n    //     dispatch({ type: \"ADD_CONTACT\", payload: response.data })\n    //   );\n\n    //cleare the form\n    this.setState({\n      name: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, username, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter The Name ...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Uasername\"\n                    name=\"username\"\n                    value={username}\n                    placeholder=\"Enter The Username ...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter The Email ...\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter The Phone ...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const result = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    //put the data in contact object\n    const contact = result.data;\n\n    //set the state\n    this.setState({\n      name: contact.name,\n      username: contact.username,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, username, email, phone } = this.state;\n\n    //check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required\" } });\n      return;\n    }\n    if (username === \"\") {\n      this.setState({ errors: { username: \"Usernmae is Required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required\" } });\n      return;\n    }\n\n    const updateContact = {\n      name: name,\n      username: username,\n      email: email,\n      phone: phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const result = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: result.data });\n\n    //cleare the form\n    this.setState({\n      name: \"\",\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, username, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter The Name ...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Uasername\"\n                    name=\"username\"\n                    value={username}\n                    placeholder=\"Enter The Username ...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    placeholder=\"Enter The Email ...\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter The Phone ...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, That page doesn't exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\n//When deploy to githup\n//import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport NotFound from \"./components/pages/NotFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}